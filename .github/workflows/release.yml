name: Release Packages

on:
  workflow_dispatch:
    branches:
      - main
  push:
    branches:
      - 'release/v**'

jobs:
  version:
    name: Version Packages
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Create Release Pull Request
        uses: changesets/action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Package Version
        id: get-version
        run: |
          if [ ! -f "./packages/siwe/package.json" ]; then
            echo "Error: ./packages/siwe/package.json not found"
            exit 1
          fi
          VERSION=$(node -p "require('./packages/siwe/package.json').version")
          if [ -z "$VERSION" ]; then
            echo "Error: Could not determine version"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release Branch
        uses: actions/github-script@v7
        with:
          script: |
            const branchName = `release/v${{ steps.get-version.outputs.version }}`
            const ref = `refs/heads/${branchName}`
            
            // Get the current commit SHA
            const { data: { object: { sha } } } = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main'
            })
            
            // Create the new branch
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: ref,
              sha: sha
            })
            
            // Add a label to the branch
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['release']
            })

  publish:
    name: Publish Packages
    if: startsWith(github.ref, 'refs/heads/release/v')
    needs: version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Publish Packages
        run: pnpm publish --filter "{./packages/*}" --registry https://registry.npmjs.org
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 