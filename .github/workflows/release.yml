name: Release Packages

on:
  workflow_dispatch:
    branches:
      - main
  push:
    branches:
      - 'release/v**'

jobs:
  version:
    name: Version Packages
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Version Packages
        run: pnpm changeset version

      - name: Get Package Version
        id: get-version
        run: |
          if [ ! -f "./packages/siwe/package.json" ]; then
            echo "Error: ./packages/siwe/package.json not found"
            exit 1
          fi
          VERSION=$(node -p "require('./packages/siwe/package.json').version")
          if [ -z "$VERSION" ]; then
            echo "Error: Could not determine version"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Create Release Branch
        run: |
          git checkout -b release/v${{ steps.get-version.outputs.version }} main

      - name: Check for Changes
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and Push Version Changes
        if: steps.check-changes.outputs.has_changes == 'true'
        run: |
          git add .
          git commit -m "chore: release v${{ steps.get-version.outputs.version }}"
          git push origin release/v${{ steps.get-version.outputs.version }}

      - name: Push Branch Without Changes
        if: steps.check-changes.outputs.has_changes == 'false'
        run: |
          git push origin release/v${{ steps.get-version.outputs.version }}

  publish:
    name: Publish Packages
    if: startsWith(github.ref, 'refs/heads/release/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Publish Packages
        run: pnpm publish --filter "{./packages/*}" --registry https://registry.npmjs.org
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 